{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jamie\\\\pelafinal\\\\client\\\\src\\\\components\\\\messagelist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Message from \"./message\";\nimport moment from \"moment\";\nimport \"./messages.css\";\nconst MY_USER_ID = \"apple\";\n\nconst Messages = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    getMessages();\n  }, []);\n\n  const getMessages = () => {\n    var tempMessages = [{\n      id: 1,\n      author: \"apple\",\n      message: \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\n      timestamp: new Date().getTime()\n    }, {\n      id: 2,\n      author: \"orange\",\n      message: \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\n      timestamp: new Date().getTime()\n    }, {\n      id: 3,\n      author: \"orange\",\n      message: \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\n      timestamp: new Date().getTime()\n    }, {\n      id: 4,\n      author: \"apple\",\n      message: \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\n      timestamp: new Date().getTime()\n    }, {\n      id: 5,\n      author: \"apple\",\n      message: \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\n      timestamp: new Date().getTime()\n    }, {\n      id: 6,\n      author: \"apple\",\n      message: \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\n      timestamp: new Date().getTime()\n    }, {\n      id: 7,\n      author: \"orange\",\n      message: \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\n      timestamp: new Date().getTime()\n    }, {\n      id: 8,\n      author: \"orange\",\n      message: \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\n      timestamp: new Date().getTime()\n    }, {\n      id: 9,\n      author: \"apple\",\n      message: \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\n      timestamp: new Date().getTime()\n    }, {\n      id: 10,\n      author: \"orange\",\n      message: \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\n      timestamp: new Date().getTime()\n    }];\n    setMessages([...messages, ...tempMessages]);\n  };\n\n  const renderMessages = () => {\n    let i = 0;\n    let messageCount = messages.length;\n    let tempMessages = [];\n\n    while (i < messageCount) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.author === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as(\"hours\") < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as(\"hours\") < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as(\"hours\") < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push( /*#__PURE__*/_jsxDEV(Message, {\n        isMine: isMine,\n        startsSequence: startsSequence,\n        endsSequence: endsSequence,\n        showTimestamp: showTimestamp,\n        data: current\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)); // Proceed to the next message.\n\n      i += 1;\n    }\n\n    return tempMessages;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list-container\",\n      children: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Messages, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/Jamie/pelafinal/client/src/components/messagelist.js"],"names":["React","useState","useEffect","Message","moment","MY_USER_ID","Messages","messages","setMessages","getMessages","tempMessages","id","author","message","timestamp","Date","getTime","renderMessages","i","messageCount","length","previous","current","next","isMine","currentMoment","prevBySameAuthor","nextBySameAuthor","startsSequence","endsSequence","showTimestamp","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Message from \"./message\";\r\nimport moment from \"moment\";\r\nimport \"./messages.css\";\r\n\r\nconst MY_USER_ID = \"apple\";\r\n\r\nconst Messages = () => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMessages();\r\n  }, []);\r\n\r\n  const getMessages = () => {\r\n    var tempMessages = [\r\n      {\r\n        id: 1,\r\n        author: \"apple\",\r\n        message:\r\n          \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 2,\r\n        author: \"orange\",\r\n        message:\r\n          \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 3,\r\n        author: \"orange\",\r\n        message:\r\n          \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 4,\r\n        author: \"apple\",\r\n        message:\r\n          \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 5,\r\n        author: \"apple\",\r\n        message:\r\n          \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 6,\r\n        author: \"apple\",\r\n        message:\r\n          \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 7,\r\n        author: \"orange\",\r\n        message:\r\n          \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 8,\r\n        author: \"orange\",\r\n        message:\r\n          \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 9,\r\n        author: \"apple\",\r\n        message:\r\n          \"Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.\",\r\n        timestamp: new Date().getTime()\r\n      },\r\n      {\r\n        id: 10,\r\n        author: \"orange\",\r\n        message:\r\n          \"It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!\",\r\n        timestamp: new Date().getTime()\r\n      }\r\n    ];\r\n    setMessages([...messages, ...tempMessages]);\r\n  };\r\n\r\n  const renderMessages = () => {\r\n    let i = 0;\r\n    let messageCount = messages.length;\r\n    let tempMessages = [];\r\n\r\n    while (i < messageCount) {\r\n      let previous = messages[i - 1];\r\n      let current = messages[i];\r\n      let next = messages[i + 1];\r\n      let isMine = current.author === MY_USER_ID;\r\n      let currentMoment = moment(current.timestamp);\r\n      let prevBySameAuthor = false;\r\n      let nextBySameAuthor = false;\r\n      let startsSequence = true;\r\n      let endsSequence = true;\r\n      let showTimestamp = true;\r\n\r\n      if (previous) {\r\n        let previousMoment = moment(previous.timestamp);\r\n        let previousDuration = moment.duration(\r\n          currentMoment.diff(previousMoment)\r\n        );\r\n        prevBySameAuthor = previous.author === current.author;\r\n\r\n        if (prevBySameAuthor && previousDuration.as(\"hours\") < 1) {\r\n          startsSequence = false;\r\n        }\r\n\r\n        if (previousDuration.as(\"hours\") < 1) {\r\n          showTimestamp = false;\r\n        }\r\n      }\r\n\r\n      if (next) {\r\n        let nextMoment = moment(next.timestamp);\r\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\r\n        nextBySameAuthor = next.author === current.author;\r\n\r\n        if (nextBySameAuthor && nextDuration.as(\"hours\") < 1) {\r\n          endsSequence = false;\r\n        }\r\n      }\r\n\r\n      tempMessages.push(\r\n        <Message\r\n          key={i}\r\n          isMine={isMine}\r\n          startsSequence={startsSequence}\r\n          endsSequence={endsSequence}\r\n          showTimestamp={showTimestamp}\r\n          data={current}\r\n        />\r\n      );\r\n\r\n      // Proceed to the next message.\r\n      i += 1;\r\n    }\r\n\r\n    return tempMessages;\r\n  };\r\n\r\n  return (\r\n  <div className=\"message-list-wrapper\">\r\n  <div className=\"message-list-container\">{messages}</div>\r\n  </div>);\r\n};\r\n\r\nexport default Messages;\r\n"]},"metadata":{},"sourceType":"module"}