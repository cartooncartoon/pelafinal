{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jamie\\\\pelafinal\\\\client\\\\src\\\\components\\\\messagelist.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Message from \"./message\";\nimport moment from \"moment\";\nimport \"./messages.css\";\n\nconst Messages = ({\n  messages: {\n    user\n  },\n  name,\n  messages\n}) => {\n  const MY_USER_ID = name;\n  let timestamp = new Date().getTime();\n\n  const renderMessages = () => {\n    let i = 0;\n    let messageCount = messages.length;\n    let tempMessages = [];\n    console.log(messageCount);\n\n    while (i < messageCount) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.user === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as(\"hours\") < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as(\"hours\") < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as(\"hours\") < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push( /*#__PURE__*/_jsxDEV(Message, {\n        isMine: isMine,\n        startsSequence: startsSequence,\n        endsSequence: endsSequence,\n        showTimestamp: showTimestamp,\n        data: current,\n        timestamp: timestamp\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)); // Proceed to the next message.\n\n      i += 1;\n    }\n\n    return tempMessages;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list-container\",\n    children: renderMessages()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/Jamie/pelafinal/client/src/components/messagelist.js"],"names":["React","useState","useEffect","Message","moment","Messages","messages","user","name","MY_USER_ID","timestamp","Date","getTime","renderMessages","i","messageCount","length","tempMessages","console","log","previous","current","next","isMine","currentMoment","prevBySameAuthor","nextBySameAuthor","startsSequence","endsSequence","showTimestamp","previousMoment","previousDuration","duration","diff","author","as","nextMoment","nextDuration","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Message from \"./message\";\r\nimport moment from \"moment\";\r\nimport \"./messages.css\";\r\n\r\n\r\n\r\nconst Messages = ({ messages: {user}, name, messages,}) => {\r\n\r\n  const MY_USER_ID = name;\r\n  let timestamp = new Date().getTime()\r\n  \r\n  const renderMessages = () => {\r\n    let i = 0;\r\n    let messageCount = messages.length;\r\n    let tempMessages = [];\r\n\r\n    console.log(messageCount);\r\n\r\n    while (i < messageCount) {\r\n      let previous = messages[i - 1];\r\n      let current = messages[i];\r\n      let next = messages[i + 1];\r\n      let isMine = current.user === MY_USER_ID;\r\n      let currentMoment = moment(current.timestamp);\r\n      let prevBySameAuthor = false;\r\n      let nextBySameAuthor = false;\r\n      let startsSequence = true;\r\n      let endsSequence = true;\r\n      let showTimestamp = true;\r\n\r\n      if (previous) {\r\n        let previousMoment = moment(previous.timestamp);\r\n        let previousDuration = moment.duration(\r\n          currentMoment.diff(previousMoment)\r\n        );\r\n        prevBySameAuthor = previous.author === current.author;\r\n\r\n        if (prevBySameAuthor && previousDuration.as(\"hours\") < 1) {\r\n          startsSequence = false;\r\n        }\r\n\r\n        if (previousDuration.as(\"hours\") < 1) {\r\n          showTimestamp = false;\r\n        }\r\n      }\r\n\r\n      if (next) {\r\n        let nextMoment = moment(next.timestamp);\r\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\r\n        nextBySameAuthor = next.author === current.author;\r\n\r\n        if (nextBySameAuthor && nextDuration.as(\"hours\") < 1) {\r\n          endsSequence = false;\r\n        }\r\n      }\r\n\r\n      tempMessages.push(\r\n        <Message\r\n          key={i}\r\n          isMine={isMine}\r\n          startsSequence={startsSequence}\r\n          endsSequence={endsSequence}\r\n          showTimestamp={showTimestamp}\r\n          data={current}\r\n          timestamp={timestamp}\r\n        />\r\n      );\r\n\r\n      // Proceed to the next message.\r\n      i += 1;\r\n    }\r\n\r\n    return tempMessages;\r\n  };\r\n\r\n  return (\r\n  <div className=\"message-list-container\">{renderMessages()}</div>\r\n );\r\n};\r\n\r\nexport default Messages;\r\n"]},"metadata":{},"sourceType":"module"}